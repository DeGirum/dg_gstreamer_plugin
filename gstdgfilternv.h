/**
 * Copyright (c) 2017-2021, NVIDIA CORPORATION.  All rights reserved.
 * Copyright (c) 2023 Stephan Sokolov < stephan@degirum.com >
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __GST_DGFILTERNV_H__
#define __GST_DGFILTERNV_H__

#include <gst/base/gstbasetransform.h>
#include <gst/video/video.h>

/* Open CV headers */
#pragma GCC diagnostic push
#if __GNUC__ >= 8
#pragma GCC diagnostic ignored "-Wclass-memaccess"
#endif
#pragma GCC diagnostic pop
#include <memory>
#include <cuda.h>
#include <cuda_runtime.h>
#include "nvbufsurface.h"
#include "nvbufsurftransform.h"
#include "gst-nvquery.h"
#include "gstnvdsmeta.h"
#include "dgfilternv_lib/dgfilternv_lib.h"
#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/highgui/highgui.hpp"

/* Package and library details required for plugin_init */
#define PACKAGE "dgfilternv"
#define VERSION "1.3"
#define LICENSE "LGPL"
#define DESCRIPTION "This plugin is for pipelines that connect to DeGirum's AI inference model."
#define BINARY_PACKAGE "NVIDIA DeepStream 3rdparty IP integration"
#define URL "http://degirum.ai/"


G_BEGIN_DECLS
typedef struct _GstDgFilternv GstDgFilternv;
typedef struct _GstDgFilternvClass GstDgFilternvClass;

#define GST_TYPE_DGFILTERNV (gst_dgfilternv_get_type())
#define GST_DGFILTERNV(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj),GST_TYPE_DGFILTERNV,GstDgFilternv))
#define GST_DGFILTERNV_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST((klass),GST_TYPE_DGFILTERNV,GstDgFilternvClass))
#define GST_DGFILTERNV_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GST_TYPE_DGFILTERNV, GstDgFilternvClass))
#define GST_IS_DGFILTERNV(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj),GST_TYPE_DGFILTERNV))
#define GST_IS_DGFILTERNV_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE((klass),GST_TYPE_DGFILTERNV))
#define GST_DGFILTERNV_CAST(obj)  ((GstDgFilternv *)(obj))

struct _GstDgFilternv
{
  GstBaseTransform base_trans;

  // Context of the DG model library
  DgFilternvCtx *dgfilternvlib_ctx;

  // Unique ID of the element. The labels generated by the element will be
  // updated at index `unique_id` of attr_info array in NvDsObjectParams.
  guint unique_id;

  // Frame number of the current input buffer
  guint64 frame_num;

  // CUDA Stream used for allocating the CUDA task
  cudaStream_t cuda_stream;

  // RBG data in a buffer
  void *host_rgb_buf;

  // the intermediate scratch buffer for conversions RGBA
  NvBufSurface *inter_buf;

  // OpenCV mat containing RGB data
  cv::Mat *cvmat;

  // Input video info (resolution, color format, framerate, etc)
  GstVideoInfo video_info;

  // Resolution at which frames/objects should be processed
  gint processing_width;
  gint processing_height;

  // Flag for igpu/dgpu
  guint is_integrated;

  // Amount of objects processed in single call to algorithm
  guint batch_size;

  // GPU ID on which we expect to execute the task
  guint gpu_id;

  // Model name
  const char *model_name;
};

// Boiler plate stuff
struct _GstDgFilternvClass
{
  GstBaseTransformClass parent_class;
};

GType gst_dgfilternv_get_type (void);

G_END_DECLS
#endif /* __GST_DGFILTERNV_H__ */
